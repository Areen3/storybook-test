{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonStrComponent",
            "id": "component-ButtonStrComponent-487ec2f7815ad44f20a6cb78bea146dc752c22485b41ac655351dbc7a91b67fe90770adebd22fbd75cf43b37037a24a4c7119f53ff103affe0d7003c51a6616c",
            "file": "libs/str/src/lib/button/button-str.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button-str",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button-str.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "{\n    name: 'Click me',\n    padding: 10\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TestInput",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClicked",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TestInput } from '@storybook/str2';\n\n\n\n@Component({\n  selector: 'storybook-button-str',\n  templateUrl: './button-str.component.html',\n  styleUrl: './button-str.component.css'\n})\nexport class ButtonStrComponent {\n  @Input() data: TestInput = {\n    name: 'Click me',\n    padding: 10\n  }\n  // @Input() text = 'Click me';\n  // @Input() padding = 10;\n  @Input() disabled = false;\n  @Output() onClicked: EventEmitter<string> = new EventEmitter<string>();\n\n  onClick(): void {\n    this.onClicked.emit('data');\n    console.log('klikniÄ™to');\n  }\n}\n",
            "styleUrl": "./button-str.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button (click)=\"onClick()\" [disabled]=\"disabled\" [ngStyle]=\"{'padding.px': data.padding }\">'{{ data.name }}'</button>\r\n"
        }
    ],
    "modules": [
        {
            "name": "CompModule",
            "id": "module-CompModule-463806928b4aad1628c3c4e84676bc552b3d8ffb59949dd1ee638165784f33306371b2966de846c3fe2efd855b147e3560bab337b6eebd65bc7b6227ea4b5dce",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/str/src/lib/comp.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonStrComponent } from './button/button-str.component';\nimport {Str2Module} from '@storybook/str2'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Str2Module],\n  declarations:[ButtonStrComponent],\n  exports: [ButtonStrComponent]\n})\nexport class CompModule {\n}\n\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonStrComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonStrComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onClicked: action('onClicked')\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/str/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../src/lib/**/*.stories.@(js|jsx|ts|tsx|mdx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-a11y',],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: 'tag',\n    defaultName: 'Docs',\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    data: getData(),\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Click me/)).toBeTruthy();\n    expect(canvas.getByText(/Click me/)).toBeTruthy();\n    console.log('log fom button play')\n  },\n}"
            },
            {
                "name": "Heading2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    data: getData(),\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Click me/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonStrComponent>",
                "defaultValue": "{\n  component: ButtonStrComponent,\n  title: 'MyButtonComponent',\n  tags: ['autodocs'],\n  excludeStories: /.*Data$/,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, Str2Module]\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(Str2Module)]\n    }),\n    // use your injector here !!\n    injectInjectorToProps(),\n  ],\n  render: (args: ButtonStrComponent) => ({\n    props: {\n      ...args,\n      // onClicked: actionsData.onClicked,\n      // getPropData: (injector: Injector) => {\n      //   console.log('jestem2')\n      //   // the injector is provided by the template and all services are now available\n      //   return injector.get(DataBuilder).getData();\n      // }\n    }\n    // template: `<storybook-button-str ${argsToTemplate(args)}>/<storybook-button-str>`\n  })\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/str/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Moje story',\n  args: {\n    data: getData(),\n    disabled: false\n  }\n}"
            }
        ],
        "functions": [
            {
                "name": "getData",
                "file": "libs/str/src/lib/services/inject-props.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "TestInput"
            },
            {
                "name": "injectInjectorToProps",
                "file": "libs/str/src/lib/services/inject-props.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "DecoratorFunction<AngularRenderer, TArgs>"
            },
            {
                "name": "spreedData",
                "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "data",
                        "type": "TestInput",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "args",
                        "type": "TestInput",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "TestInput",
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "TestInput",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "args",
                        "type": "TestInput",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonStrComponent>",
                "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/str/src/lib/button/button-str.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onClicked: action('onClicked')\n}"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    data: getData(),\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Click me/)).toBeTruthy();\n    expect(canvas.getByText(/Click me/)).toBeTruthy();\n    console.log('log fom button play')\n  },\n}"
                },
                {
                    "name": "Heading2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    data: getData(),\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/Click me/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonStrComponent>",
                    "defaultValue": "{\n  component: ButtonStrComponent,\n  title: 'MyButtonComponent',\n  tags: ['autodocs'],\n  excludeStories: /.*Data$/,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, Str2Module]\n    }),\n    applicationConfig({\n      providers: [importProvidersFrom(Str2Module)]\n    }),\n    // use your injector here !!\n    injectInjectorToProps(),\n  ],\n  render: (args: ButtonStrComponent) => ({\n    props: {\n      ...args,\n      // onClicked: actionsData.onClicked,\n      // getPropData: (injector: Injector) => {\n      //   console.log('jestem2')\n      //   // the injector is provided by the template and all services are now available\n      //   return injector.get(DataBuilder).getData();\n      // }\n    }\n    // template: `<storybook-button-str ${argsToTemplate(args)}>/<storybook-button-str>`\n  })\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Moje story',\n  args: {\n    data: getData(),\n    disabled: false\n  }\n}"
                }
            ],
            "libs/str/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/str/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../src/lib/**/*.stories.@(js|jsx|ts|tsx|mdx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-a11y',],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: 'tag',\n    defaultName: 'Docs',\n  },\n}"
                }
            ],
            "libs/str/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/str/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "libs/str/src/lib/services/inject-props.ts": [
                {
                    "name": "getData",
                    "file": "libs/str/src/lib/services/inject-props.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "TestInput"
                },
                {
                    "name": "injectInjectorToProps",
                    "file": "libs/str/src/lib/services/inject-props.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "DecoratorFunction<AngularRenderer, TArgs>"
                }
            ],
            "libs/str/src/lib/button/button-str.component.stories.ts": [
                {
                    "name": "spreedData",
                    "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "data",
                            "type": "TestInput",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "TestInput",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "TestInput",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "TestInput",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "TestInput",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/str/src/lib/button/button-str.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonStrComponent>",
                    "file": "libs/str/src/lib/button/button-str.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/str/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/button/button-str.component.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "spreedData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/button/button-str.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/button/button-str.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/button/button-str.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/button/button-str.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/button/button-str.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/button/button-str.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonStrComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/services/inject-props.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/str/src/lib/services/inject-props.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "injectInjectorToProps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}